{"ast":null,"code":"var _jsxFileName = \"/Users/mikaylacastro/code/ironhackpt2020/module3/mini-proj/client/src/components/ShowAll.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport Search from './Search';\nexport default class ShowAll extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      playlists: [],\n      search: ''\n    };\n\n    this.getFeaturedPlaylists = () => {\n      axios.get(`http://localhost:4000/api/all-playlists`).then(responseFromAPI => {\n        this.setState({\n          playlists: responseFromAPI.data.featuredPlaylists\n        });\n      }).catch(err => console.log(err));\n    };\n\n    this.getSearchedPlaylists = async event => {\n      const {\n        value\n      } = event.target;\n      await this.setState({\n        search: value.toLowerCase()\n      });\n      axios.get(`http://localhost:4000/api/playlist-search?playlistSearch=${this.state.search}`).then(searchFromAPI => {\n        console.log(searchFromAPI.data.searchResults);\n        this.setState({\n          playlists: searchFromAPI.data.searchResults\n        });\n      }).catch(err => console.log(err));\n    };\n  }\n\n  componentDidMount() {\n    this.getFeaturedPlaylists();\n  }\n\n  render() {\n    console.log(this.state.playlists);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"featured-playlists\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, this.state.playlists.map(playlist => {\n      const descriptionNoCover = playlist.description.split('Cover');\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: playlist.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: playlist.images[0].url,\n        alt: \"playlist-cover\",\n        className: \"ft-playlist-imgs\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Link, {\n        to: `/playlists/${playlist.id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 33\n        }\n      }, playlist.name)), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 33\n        }\n      }, descriptionNoCover[0]), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 33\n        }\n      }, \"Created by \", /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 47\n        }\n      }, playlist.owner.display_name)));\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/mikaylacastro/code/ironhackpt2020/module3/mini-proj/client/src/components/ShowAll.js"],"names":["React","Component","axios","Link","Search","ShowAll","state","playlists","search","getFeaturedPlaylists","get","then","responseFromAPI","setState","data","featuredPlaylists","catch","err","console","log","getSearchedPlaylists","event","value","target","toLowerCase","searchFromAPI","searchResults","componentDidMount","render","map","playlist","descriptionNoCover","description","split","id","images","url","name","owner","display_name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport Search from './Search';\n\n\nexport default class ShowAll extends Component {\n    state = {\n        playlists: [],\n        search: ''\n    }\n\n    componentDidMount() {\n        this.getFeaturedPlaylists();\n    }\n\n    getFeaturedPlaylists = () => {\n        axios.get(`http://localhost:4000/api/all-playlists`)\n            .then(responseFromAPI => {\n                this.setState({\n                    playlists: responseFromAPI.data.featuredPlaylists\n                })\n            })\n            .catch(err => console.log(err))\n    }\n\n    getSearchedPlaylists = async (event) => {\n        const { value } = event.target;\n\n        await this.setState({\n            search: value.toLowerCase()\n        });\n        axios\n            .get(`http://localhost:4000/api/playlist-search?playlistSearch=${this.state.search}`)\n            .then(searchFromAPI => {\n                console.log(searchFromAPI.data.searchResults)\n                this.setState({\n                    playlists: searchFromAPI.data.searchResults\n                })\n            })\n            .catch(err => console.log(err))\n    }\n\n  \n\n    \n    render() {\n        console.log(this.state.playlists)\n        return (\n        <div className='featured-playlists'> \n        {/* <input type='text' value={this.state.search} onChange={this.getSearchedPlaylists} placeholder='search'></input> */}\n        {/* <Search onChange={this.getSearchedPlaylists}/> */}\n            <div>\n                <div>\n                {this.state.playlists.map(playlist => {\n                    const descriptionNoCover = playlist.description.split('Cover')\n                    return(\n                        <div key={playlist.id} >\n                            <img src={playlist.images[0].url} alt='playlist-cover' className='ft-playlist-imgs'/>\n                            <Link to={`/playlists/${playlist.id}`}>\n                                <h3>{playlist.name}</h3>\n                            </Link>\n                                <p>{descriptionNoCover[0]}</p>\n                                <p>Created by <b>{playlist.owner.display_name}</b></p>\n                        </div>\n                    )\n                })}\n                </div>\n            </div>\n            </div>\n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}