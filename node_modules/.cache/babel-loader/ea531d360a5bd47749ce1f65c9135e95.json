{"ast":null,"code":"var _jsxFileName = \"/Users/mikaylacastro/code/ironhackpt2020/module3/mini-proj/client/src/components/Details.js\";\nimport React, { Component, useState } from 'react';\nimport axios from 'axios';\nexport default class Details extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      image_url: '',\n      tracks: [],\n      description: '',\n      name: '',\n      owner: '',\n      total_songs: 0\n    };\n\n    this.getSinglePlaylist = () => {\n      const {\n        params\n      } = this.props.match;\n      axios.get(`http://localhost:4000/api/playlists/${params.id}`).then(responseFromAPI => {\n        console.log(responseFromAPI.data.body);\n        this.setState({\n          image_url: responseFromAPI.data.body.images[0].url,\n          tracks: responseFromAPI.data.body.tracks.items,\n          description: responseFromAPI.data.body.description,\n          name: responseFromAPI.data.body.name,\n          owner: responseFromAPI.data.body.owner.display_name,\n          total_songs: responseFromAPI.data.body.tracks.total\n        });\n      }).catch(err => console.log(err));\n    };\n  }\n\n  componentDidMount() {\n    this.getSinglePlaylist();\n  }\n\n  render() {\n    // const singleTrack = this.state.tracks\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.image_url,\n      alt: \"playlist-cover\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, this.state.name), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, this.state.description), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, \"Created by: \", this.state.owner), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, \"Total songs: \", this.state.total_songs), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 33\n      }\n    }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 33\n      }\n    }, \"Title\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 33\n      }\n    }, \"Artist\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 33\n      }\n    }, \"Album\")), this.state.tracks.map((track, i) => {\n      let count = i;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 34\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 37\n        }\n      }, track.track.name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 37\n        }\n      }, track.track.album.artists[0].name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 37\n        }\n      }, track.track.album.name)));\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/mikaylacastro/code/ironhackpt2020/module3/mini-proj/client/src/components/Details.js"],"names":["React","Component","useState","axios","Details","state","image_url","tracks","description","name","owner","total_songs","getSinglePlaylist","params","props","match","get","id","then","responseFromAPI","console","log","data","body","setState","images","url","items","display_name","total","catch","err","componentDidMount","render","map","track","i","count","album","artists"],"mappings":"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","sourcesContent":["\nimport React, { Component, useState } from 'react'\nimport axios from 'axios'\n\nexport default class Details extends Component {\n    // state = {\n    //    images: {\n    //        url: '',\n    //    },\n    //    tracks: {\n    //        items: {\n    //            track: {\n    //                name: '',\n    //                track_number: '',\n    //                album: {\n    //                    artists: {\n    //                        name: ''\n    //                    }\n    //                }\n    //            }\n    //        }\n    //    } \n    // }\n\n    state = {\n        image_url: '',\n        tracks: [],\n        description: '',\n        name: '',\n        owner: '',\n        total_songs: 0\n    }\n\n    componentDidMount() {\n        this.getSinglePlaylist();\n    }\n\n    getSinglePlaylist = () => {\n        const { params } = this.props.match;\n        axios\n            .get(`http://localhost:4000/api/playlists/${params.id}`)\n            .then(responseFromAPI => {\n                console.log(responseFromAPI.data.body)\n                this.setState({\n                    image_url: responseFromAPI.data.body.images[0].url,\n                    tracks: responseFromAPI.data.body.tracks.items,\n                    description: responseFromAPI.data.body.description,\n                    name: responseFromAPI.data.body.name,\n                    owner: responseFromAPI.data.body.owner.display_name,\n                    total_songs: responseFromAPI.data.body.tracks.total\n                })\n            })\n            .catch(err => console.log(err))\n    }\n\n\n\n    render() {\n        // const singleTrack = this.state.tracks\n        return (\n            <div>\n                <img src={this.state.image_url} alt='playlist-cover' />\n                <h2>{this.state.name}</h2>\n                <p>{this.state.description}</p>\n                <p>Created by: {this.state.owner}</p>\n                <p>Total songs: {this.state.total_songs}</p>\n                <div>\n                        <table>\n                            <tr>\n                                <th>#</th>\n                                <th>Title</th>\n                                <th>Artist</th>\n                                <th>Album</th>\n                            </tr>\n                    {this.state.tracks.map((track, i) => {\n                        let count = i\n                        return (\n                            <>\n                                 <tr>\n                                    <td>{}</td>\n                                    <td>{track.track.name}</td>\n                                    <td>{track.track.album.artists[0].name}</td>\n                                    <td>{track.track.album.name}</td>\n                                </tr>  \n                            </>\n                        )\n                    })}\n                    </table>\n                </div>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}