{"version":3,"sources":["components/Landing.js","components/Favorites.js","components/ShowAll.js","components/Details.js","App.js","serviceWorker.js","index.js"],"names":["Landing","class","id","className","href","to","style","textDecoration","src","alt","Component","Favorites","state","iconClass","toggleHeart","setState","this","onClick","ShowAll","playlists","search","boxIsChecked","savedPrevState","getFeaturedPlaylists","axios","get","then","responseFromAPI","data","featuredPlaylists","catch","err","console","log","getSearchedPlaylists","event","a","value","target","toLowerCase","searchFromAPI","searchResults","filterByNumberOfTracks","min","max","filteredByTracks","filter","playlist","tracks","total","checked","filterByPlaylistCreators","creator","filteredByCreator","owner","display_name","playlistCreators","map","creatorsNoDuplicates","i","indexOf","container","window","location","reload","aria-hidden","type","onChange","placeholder","e","for","descriptionNoCover","description","split","key","images","url","name","Details","image_url","total_songs","playlist_link","getSinglePlaylist","params","props","match","body","items","external_urls","spotify","millisToMinutesAndSeconds","millis","minutes","Math","floor","seconds","toFixed","scope","track","artists","album","duration_ms","App","exact","path","component","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.6e1dce6d.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n// import Button from 'react-bootstrap/Button'\nimport '../Landing.css'\n\nexport class Landing extends Component {\n    render() {\n        return (\n        <div>\n        {/* <nav className=\"navbar navbar-light bg-light justify-content-between\">\n        <Link to='/' className=\"navbar-brand home-btn\"><h3>Mini Project</h3></Link>\n                    <form className=\"form-inline d-flex justify-content-center md-form form-sm active-cyan active-cyan-2 mt-2\">\n                    <i className=\"fas fa-search\" aria-hidden=\"true\"></i>\n                        <input className='search-bar' type='text' value={this.state.search} onChange={this.getSearchedPlaylists} placeholder='Search'></input>\n                    </form>\n                    \n                </nav> */}\n        <nav class='navbar navbar-expand-lg navbar-light fixed-top' id='mainNav'>\n            <div className='container'>\n                <a href='/' className='navbar-brand'>Mini Project</a>\n                <span>Spotify API</span>\n            </div>\n        </nav>\n            <header className='masthead'>\n                <div className ='container h-100'>\n                \n                    <div className='row h-100'>\n                    \n                        <div className='col-lg-7 my-auto'>\n                            <div className='header-content mx-auto'>\n                                <h1 className='mb-5'>Use the Spotify API to search for playlists by name, creators, and number of tracks!</h1>\n                                <Link to='/playlists' style={{ textDecoration: 'none' }}>\n                                <button className='landing-btn'>\n                                \n                                    CLICK HERE TO START\n                                \n                                </button>\n                                </Link>\n                            </div>\n                        </div>\n                        <div className='col-lg-5 my-auto'>\n                        <div className=\"device-container\">\n                        <div className=\"device-mockup iphone6_plus portrait white\">\n                        <div className=\"device\">\n                            {/* <!-- Demo image for screen mockup, you can put an image here, some HTML, an animation, video, or anything else! --> */}\n                            <img src='../../pngfind.com-spotify-png-576303.png' alt=\"spotify-iphone\" className='img-fluid'/>  \n                        </div>\n                        </div>\n                        </div>\n                        </div>\n                    </div>\n                </div>\n            </header>\n            <section className='powered-spotify bg-primary text-center'>\n                    <div className='container'>\n                        <div className='row'>\n                            <div className='col-md-8 mx-auto'>\n                                <h2 className='section-heading'>Mini Project powered by Spotify API and Spotify Node NPM package</h2>\n                                <p>Ironhack PTWD 2020 project to practice using APIs with React and implementing search and filter functionality.</p>\n                                <div className='logos'>\n                                    <a href='https://developer.spotify.com/documentation/web-api/'>\n                                        <img src='../../Daco_4711911.png' alt='spotify-logo' />\n                                    </a>\n                                    <a href='https://www.npmjs.com/package/spotify-web-api-node'>\n                                        <img src='../../npm-logo.png' alt='npm logo' />\n                                    </a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n            </section>\n            <section className='features'>\n                <div className='container'>\n                    <div className='section-heading text-center'>\n                        <h2>Application Features</h2>\n                        <p className='text-muted'>User is able to search playlists from the home page, filter search by number of songs and playlist creator, and access external urls through the details page.</p>\n                        <hr />\n                    </div>\n                    <div className='row'>\n                        <div className='col-lg-4 my-auto'>\n                            <div className='device-container'>\n                                <div className='device-mockup iphone6_plus portrait white'>\n                                <div className=\"device\">\n                            <div className=\"screen\">\n                            {/* <!-- Demo image for screen mockup, you can put an image here, some HTML, an animation, video, or anything else! --> */}\n                            <img src='../../pngfind.com-reggaeton-png-3915334.png' alt=\"spotify-iphone\" className='img-fluid'/>\n                            </div>\n                        </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className='col-lg-8 my-auto'>\n                            <div className='container-fluid'>\n                                <div className='row'>\n                                    <div className='col-lg-6'>\n                                        <div className='feature-item'>\n                                            <i class=\"fab fa-spotify\"></i>\n                                            <h3>Spotify API</h3>\n                                            <p className='text-muted'>App uses Spotify API to retrieve playlist, artist, album, and track information</p>\n                                        </div>\n                                    </div>\n                                    <div className='col-lg-6'>\n                                        <div className='feature-item'>\n                                        <i class=\"fab fa-npm\"></i>\n                                        <h3>Node API package</h3>\n                                        <p className='text-muted'>Utilizes NPM's Spotify API Node package for search feature</p>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className='row'>\n                                    <div className='col-lg-6'>\n                                        <div className='feature-item'>\n                                        <i class=\"fab fa-react\"></i>\n                                        <h3>React</h3>\n                                        <p className='text-muted'>Practice with using React components</p>\n                                        </div>\n                                    </div>\n                                    <div className='col-lg-6'>\n                                        <div className='feature-item'>\n                                        <i class=\"fas fa-external-link-alt\"></i>\n                                        <h3>External URLs</h3>\n                                        <p className='text-muted'>App features external links to Spotify playlists, artists, albums, and tracks</p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n            <section className='cta'>\n            <div className='overlay'></div>\n                <div className='cta-content'>\n                    <div className='container'>\n                        <h2>Start searching.</h2>\n                        <Link to='/playlists' style={{ textDecoration: 'none' }}>\n                                <button className='landing-btn'>\n                                    ENTER THE SITE\n                                </button>\n                        </Link>\n                    </div>\n                </div> \n            </section>\n            <section className='contact bg-primary' id='contact'>\n                <div className='container'>\n                    <h2>Extra Links</h2>\n                    <ul className='list-inline list-social'>\n                        <li className='list-inline-item social-github'>\n                            <a href='https://github.com/mikaylac97/mini-project'>\n                                <i class=\"fab fa-github\"></i>\n                            </a>\n                        </li>\n                        <li className='list-inline-item social-linkedin'>\n                            <a href='https://www.linkedin.com/in/mikaylacastro/'>\n                                <i class=\"fab fa-linkedin\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </section>\n            <footer>\n                <div className='container'>\n                    <p>Ironhack PTWD June 2020 Cohort. Mikayla Castro.</p>\n                </div>\n            </footer>\n        </div>\n        )\n    }\n}\n\nexport default Landing\n","import React, { Component } from 'react'\n\nexport class Favorites extends Component {\n    state = {\n        iconClass: 'far fa-heart fave-heart'\n    }\n\n    toggleHeart = () => {\n        this.state.iconClass === 'far fa-heart fave-heart' ? \n        this.setState({\n            iconClass: 'fas fa-heart fave-heart'\n        }) :\n        this.setState({\n            iconClass: 'far fa-heart fave-heart'\n        })\n    }\n\n    render() {\n        return (\n            <i className={this.state.iconClass} onClick={this.toggleHeart}></i>\n        )\n    }\n}\n\nexport default Favorites\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport Favorites from './Favorites'\n// import Navbar from './Navbar'\n// import Search from './Search';\n\n\nexport default class ShowAll extends Component {\n    state = {\n        playlists: [],\n        search: '',\n        boxIsChecked: false,\n        // savedFeatState: {},\n        // savedSearchState: {},\n        savedPrevState: {}\n    }\n\n    componentDidMount() {\n        this.getFeaturedPlaylists();\n    }\n\n    getFeaturedPlaylists = () => {\n        axios.get(`http://localhost:4000/api/all-playlists`)\n            .then(responseFromAPI => {\n                this.setState({\n                    playlists: responseFromAPI.data.featuredPlaylists,\n                    savedPrevState: responseFromAPI.data.featuredPlaylists\n                })\n            })\n            .catch(err => console.log(err))\n    }\n\n    getSearchedPlaylists = async (event) => {\n        const { value } = event.target;\n\n        await this.setState({\n            search: value.toLowerCase()\n        });\n        axios\n            .get(`http://localhost:4000/api/playlist-search?playlistSearch=${this.state.search}`)\n            .then(searchFromAPI => {\n                this.setState({\n                    playlists: searchFromAPI.data.searchResults,\n                    savedPrevState: searchFromAPI.data.searchResults\n                })\n            })\n            .catch(err => console.log(err))\n    }\n\n\n    filterByNumberOfTracks = ((event, min, max) => {\n        const filteredByTracks = this.state.playlists.filter(playlist => playlist.tracks.total >= min && playlist.tracks.total <= max)\n        \n        this.setState({\n            playlists: event.target.checked ? filteredByTracks : this.state.savedPrevState,\n        })\n    })\n\n    filterByPlaylistCreators = ((event, creator) => {\n        const filteredByCreator = this.state.playlists.filter(playlist => playlist.owner.display_name === creator)\n        \n        this.setState({\n            playlists: event.target.checked ? filteredByCreator : this.state.savedPrevState,\n            boxIsChecked: !this.state.boxIsChecked\n        })\n    })\n\n\n    \n\n    \n    render() {\n        const playlistCreators = this.state.playlists.map(playlist => playlist.owner.display_name)\n        const creatorsNoDuplicates = playlistCreators.filter((creator, i) => playlistCreators.indexOf(creator) === i)\n        console.log(creatorsNoDuplicates)    \n        return (\n            <div container>\n                <nav class='navbar navbar-expand-lg navbar-light fixed-top' id='mainNav'>\n                    <div className='container'>   \n                    <Link to='/playlists' className=\"navbar-brand home-btn\" onClick={() => window.location.reload()}><h3>Home</h3></Link>\n                        <div className='search-bar'>\n                    <i className=\"fas fa-search\" aria-hidden=\"true\"></i>\n                        <input className='search-input' type='text' value={this.state.search} onChange={this.getSearchedPlaylists} placeholder='Search'></input>\n                        </div>\n                    </div>\n                </nav>\n            <div className='row'>\n                <div className='col-sm-3'>\n                <div className='filter-sidebar'>\n                        <h5>Refine by</h5>\n                        \n                    <div>\n                        <h6 className='text-info'>Number of Tracks</h6>\n                        <ul className='list-group'>\n                            <li className='form-check'>\n                                <input type=\"checkbox\" class=\"form-check-input\" id=\"0-20\" onClick={(e) => this.filterByNumberOfTracks(e, 0, 20)}/>\n                                <label class=\"form-check-label\" for=\"0-20\">0-20</label>\n                            </li>\n                            <li className='form-check'>\n                                <input type=\"checkbox\" class=\"form-check-input\" id=\"21-50\" onClick={(e) => this.filterByNumberOfTracks(e, 21, 50)} />\n                                <label class=\"form-check-label\" for=\"21-50\">21-50</label>\n                            </li>\n                            <li className='form-check'>\n                                <input type=\"checkbox\" class=\"form-check-input\" id=\"51-99\" onClick={(e) => this.filterByNumberOfTracks(e, 51, 99)}/>\n                                <label class=\"form-check-label\" for=\"51-99\">51-99</label>\n                            </li>\n                            <li className='form-check'>\n                                <input type=\"checkbox\" class=\"form-check-input\" id=\"100\" onClick={(e) => this.filterByNumberOfTracks(e, 100, 300)} />\n                                <label class=\"form-check-label\" for=\"100\">100+</label>\n                            </li>\n                        </ul>\n                    </div>\n                    <div>\n                        <h6 className='text-info'>Created By</h6>\n                        <ul className='list-group'>\n                        {creatorsNoDuplicates.map((creator, i) => {\n                            return(\n                                <li className='form-check'>\n                                    <input type=\"checkbox\" checked={this.state.boxIsChecked} class=\"form-check-input\" id={`exampleCheck${i}`} onClick={(e) => this.filterByPlaylistCreators(e, creator)}/>\n                                    <label class=\"form-check-label\" for={`exampleCheck${i}`}>{creator}</label>\n                                </li> \n                            )\n                        })}\n                        </ul>\n                    </div>\n\n                </div>\n                </div>\n                <div className='col-sm-9'>\n        <div className='container featured-playlists'> \n                <div className='row'>\n                {this.state.playlists.map(playlist => {\n                    const descriptionNoCover = playlist.description.split('Cover')\n                    return(\n            <div key={playlist.id} className='col-4 each-playlist'>     \n                \n                    <div className='container'>\n                        <div className='hover-ctrl'>\n                        <Link to={`/playlists/${playlist.id}`} style={{ textDecoration: 'none' }}>\n                            <img src={playlist.images[0].url} alt='playlist-cover' className='image ft-playlist-imgs'/>\n                        </Link>    \n                            <Favorites />\n                        </div>\n                    </div>\n                \n                        \n                        <div className='container'>\n                        <Link to={`/playlists/${playlist.id}`} className='playlist-link'><h4>{playlist.name}</h4></Link>\n                                <p>{descriptionNoCover[0]}</p>\n                                <p>Created by <b>{playlist.owner.display_name}</b></p>\n                        </div>\n                    </div>\n                    )\n                })}\n                </div>\n            </div>\n            </div>\n            </div>\n        </div>\n        )\n    }\n}\n\n","\nimport React, { Component } from 'react'\nimport axios from 'axios'\nimport Favorites from './Favorites'\nimport '../App.css'\nimport {  Link  } from 'react-router-dom'\n\nexport default class Details extends Component {\n\n    state = {\n        image_url: '',\n        tracks: [],\n        description: '',\n        name: '',\n        owner: '',\n        total_songs: 0,\n        playlist_link: ''\n    }\n\n    componentDidMount() {\n        this.getSinglePlaylist();\n    }\n\n    getSinglePlaylist = () => {\n        const { params } = this.props.match;\n        axios\n            .get(`http://localhost:4000/api/playlists/${params.id}`)\n            .then(responseFromAPI => {\n                console.log(responseFromAPI.data.body)\n                this.setState({\n                    image_url: responseFromAPI.data.body.images[0].url,\n                    tracks: responseFromAPI.data.body.tracks.items,\n                    description: responseFromAPI.data.body.description,\n                    name: responseFromAPI.data.body.name,\n                    owner: responseFromAPI.data.body.owner.display_name,\n                    total_songs: responseFromAPI.data.body.tracks.total,\n                    playlist_link: responseFromAPI.data.body.external_urls.spotify\n                })\n            })\n            .catch(err => console.log(err))\n    }\n\n    millisToMinutesAndSeconds = (millis) => {\n        var minutes = Math.floor(millis / 60000);\n        var seconds = ((millis % 60000) / 1000).toFixed(0);\n        return minutes + \":\" + (seconds < 10 ? '0' : '') + seconds;\n    }\n\n\n\n\n\n    render() {\n        const descriptionNoCover = this.state.description.split('Cover')\n        return (\n        <div className='container-desktop'>\n                <nav class='navbar navbar-expand-lg navbar-light fixed-top' id='mainNav'>\n                    <div className='container'>\n                    <Link to='/playlists' className=\"navbar-brand home-btn\"><h3>Home</h3></Link>\n                    </div>\n                </nav>\n        <div className='details-body'>\n            <div className='playlist-details'>\n                <div className='hover-ctrl container'>\n                    <img src={this.state.image_url} alt='playlist-cover' className='image'/>\n                    <Favorites />\n                </div>\n                <div className='playlist-details-txt'>\n                <a href={this.state.playlist_link} className='playlist-link'><h2>{this.state.name}</h2></a>\n                    <p>{descriptionNoCover[0]}</p>\n                    <p>Created by <b>{this.state.owner}</b> - {this.state.total_songs} Tracks</p>\n                </div>\n            </div>  \n<div className='details-table'>\n<table className=\"table\">\n  <thead>\n    <tr>\n      <th scope=\"col\">#</th>\n      <th scope=\"col\">Title</th>\n      <th scope=\"col\">Artist</th>\n      <th scope=\"col\">Album</th>\n      <th scope='col'>Time</th>\n    </tr>\n  </thead>\n  <tbody>\n   {this.state.tracks.map((track, i) => {\n       return (\n           \n               <tr key={i} className='table-rows'>\n                   <th scope='row'>{i+1}</th>\n                   <td><a href={track.track.external_urls.spotify} className='playlist-links'>{track?.track?.name}</a></td>\n                   <td><a href={track.track.artists[0].external_urls.spotify} className='playlist-links'>{track?.track?.album?.artists[0]?.name}</a></td>\n                   <td><a href={track.track.album.external_urls.spotify} className='playlist-links'>{track?.track?.album?.name}</a></td>\n                   <td>{this.millisToMinutesAndSeconds(track.track.duration_ms)}</td>\n               </tr>\n           \n       )\n   })}\n  </tbody>\n</table>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport './App.css'\nimport Landing from './components/Landing'\nimport ShowAll from './components/ShowAll';\nimport Details from './components/Details'\n\n\nexport default class App extends Component {\n  \n  render() {\n    return (\n      <div>\n        <Switch>\n          <Route exact path='/' component={Landing} />\n          <Route exact path='/playlists' component={ShowAll} />\n          <Route exact path='/playlists/:id' component={Details} />\n        </Switch>\n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'bootstrap/dist/js/bootstrap.bundle.min'\n// import $ from 'jquery'\n// import Popper from 'popper.js'\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}